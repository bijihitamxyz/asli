name: Facebook Auto Comment Bot

on:
  schedule:
    - cron: '0 */6 * * *'    # setiap 6 jam
    - cron: '0 2,14 * * *'   # jam 9 pagi dan 9 malam WIB (2 AM dan 2 PM UTC)
  workflow_dispatch:
    inputs:
      target_feed:
        description: 'Target Feed'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - friends
          - videos
      comment_limit:
        description: 'Comment Limit (per feed)'
        required: false
        default: '5'
      dry_run:
        description: 'Dry Run (no actual comments)'
        required: false
        default: false
        type: boolean

jobs:
  validate-inputs:
    runs-on: ubuntu-latest
    outputs:
      should-run: ${{ steps.check.outputs.should-run }}
    steps:
      - name: Validate inputs
        id: check
        run: |
          if [ "${{ github.event_name }}" = "schedule" ] || [ "${{ secrets.FACEBOOK_COOKIES }}" != "" ]; then
            echo "should-run=true" >> $GITHUB_OUTPUT
          else
            echo "should-run=false" >> $GITHUB_OUTPUT
            echo "❌ FACEBOOK_COOKIES secret not configured"
          fi

  run-bot:
    needs: validate-inputs
    if: needs.validate-inputs.outputs.should-run == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npx puppeteer browsers install chrome

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libnss3 \
            libatk-bridge2.0-0 \
            libx11-xcb1 \
            libxcomposite1 \
            libxdamage1 \
            libxrandr2 \
            libgbm1 \
            libxss1 \
            libasound2-data \
            libasound2-plugins \
            fonts-liberation \
            libappindicator3-1 \
            libdrm2 \
            libgtk-3-0 \
            libnspr4 \
            libxtst6 \
            xdg-utils

      - name: Create required directories and files
        run: |
          mkdir -p logs
          touch ceklink.txt
          if [ ! -f comments.txt ]; then
            echo "Nice post! 👍" > comments.txt
            echo "---" >> comments.txt
            echo "Great content!" >> comments.txt
          fi

      - name: Setup configuration
        run: |
          if [ "${{ github.event.inputs.target_feed }}" = "friends" ]; then
            jq '.features = {"auto_comment_friend": true, "auto_comment_video": false, "auto_comment_group": false}' config.json > config.tmp && mv config.tmp config.json
          elif [ "${{ github.event.inputs.target_feed }}" = "videos" ]; then
            jq '.features = {"auto_comment_friend": false, "auto_comment_video": true, "auto_comment_group": false}' config.json > config.tmp && mv config.tmp config.json
          fi
          if [ "${{ github.event.inputs.comment_limit }}" != "" ]; then
            LIMIT="${{ github.event.inputs.comment_limit }}"
            jq --arg limit "$LIMIT" '.comment_limits = {"friends_feed": ($limit | tonumber), "video_feed": ($limit | tonumber), "group_feed": 0}' config.json > config.tmp && mv config.tmp config.json
          fi
          echo "📋 Final configuration:"
          cat config.json

      - name: Setup Gemini API Keys
        run: |
          echo "${{ secrets.GEMINI_API_KEYS }}" > gemini_api_keys.txt
          KEY_COUNT=$(grep -c "^AIzaSy" gemini_api_keys.txt || echo "0")
          echo "🤖 Found $KEY_COUNT Gemini API keys"
          if [ "$KEY_COUNT" -eq "0" ]; then
            echo "⚠️ No valid Gemini API keys found"
            echo "AIzaSyDUMMY_KEY_REPLACE_WITH_REAL_ONE" > gemini_api_keys.txt
          fi

      - name: Setup Facebook Cookies
        run: |
          echo '${{ secrets.FACEBOOK_COOKIES }}' > cookies.json
          if jq empty cookies.json 2>/dev/null; then
            COOKIE_COUNT=$(jq '. | length' cookies.json)
            echo "🍪 Loaded $COOKIE_COUNT Facebook cookies"
          else
            echo "❌ Invalid cookies format"
            exit 1
          fi

      - name: Run test
        run: npm test

      - name: Run Facebook Bot and generate summary
        run: |
          echo "## 📊 Bot Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Run ID: ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
          echo "- Target: Friends Feed & Video Feed Only (Groups Disabled)" >> $GITHUB_STEP_SUMMARY
          echo "- Running Facebook Auto Comment Bot..." >> $GITHUB_STEP_SUMMARY

          timeout 25m npm start > bot_output.log 2>&1 || echo "Bot execution completed or timed out"

          # Extract summary data from logs
          COMMENTS_POSTED=$(grep -c "✅ Successfully commented" bot_output.log || echo "0")
          FRIENDS_COMMENTS=$(grep -c "Processing friends feed" bot_output.log || echo "0")
          VIDEO_COMMENTS=$(grep -c "Processing video feed" bot_output.log || echo "0")
          
          echo "- Comments posted: $COMMENTS_POSTED" >> $GITHUB_STEP_SUMMARY
          echo "- Friends feed processed: $FRIENDS_COMMENTS times" >> $GITHUB_STEP_SUMMARY
          echo "- Video feed processed: $VIDEO_COMMENTS times" >> $GITHUB_STEP_SUMMARY
          echo "- Group commenting: **DISABLED** ✅" >> $GITHUB_STEP_SUMMARY
          
          # Show recent activity logs
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 Recent Activity Logs:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          tail -20 bot_output.log >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          
          # Show errors if any
          if grep -q "ERROR" bot_output.log; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### ⚠️ Errors Found:" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            grep "ERROR" bot_output.log | tail -5 >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi
          
        env:
          FACEBOOK_COOKIES: ${{ secrets.FACEBOOK_COOKIES }}
          GEMINI_API_KEYS: ${{ secrets.GEMINI_API_KEYS }}
          NODE_ENV: production
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_REPOSITORY: ${{ github.repository }}

      - name: Upload bot logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: bot-logs-${{ github.run_id }}
          path: |
            logs/
            ceklink.txt
            bot_output.log
          retention-days: 7

      - name: Cleanup sensitive files
        if: always()
        run: |
          rm -f cookies.json
          rm -f gemini_api_keys.txt
          echo "🧹 Sensitive files cleaned up"

  cleanup:
    needs: run-bot
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup old artifacts
        run: |
          echo "🧹 Cleanup job completed"
